{"version":3,"sources":["components/Rules/image-rules.svg","components/Rules/image-rules-bonus.svg","components/Chip/icon-rock.svg","components/Chip/icon-paper.svg","components/Chip/icon-scissors.svg","components/Chip/icon-lizard.svg","components/Chip/icon-spock.svg","components/ChipsDisplay/bg-triangle.svg","components/ChipsDisplay/bg-pentagon.svg","constants.js","store/playReducer.js","store/reducers.js","store/index.js","store/actionTypes.js","components/Score/Score.js","components/Btn/Btn.js","components/Rules/icon-close.svg","components/Rules/Rules.js","components/Chip/Chip.js","store/actionCreators.js","components/ChipsDisplay/ChipsDisplay.js","components/ResultScreen/ResultScreen.js","components/ScreenSelector/ScreenSelector.js","components/TypeSelector/TypeSelector.js","components/Game/Game.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","CHIP_NAMES","STATUSES","GAME_TYPES","ROCK","PAPER","SCISSORS","LIZARD","SPOCK","WIN","LOSE","DRAW","LIZARD_SPOCK","playReducer","store","playerChoice","houseChoice","gameType","winCombinations","isWinner","some","p","h","newStore","result","score","initialState","createStore","action","type","payload","houseChoices","concat","Math","floor","random","length","getRandomHouseChoice","ScoreDisplay","useSelector","state","className","Btn","props","to","href","rest","classes","children","_extends","Object","assign","target","i","arguments","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","createElement","fill","fillRule","d","opacity","_ref","svgRef","title","width","height","ref","ForwardRef","forwardRef","Rules","history","location","section","initial","animate","transition","duration","src","pathname","includes","rulesStandart","rulesBonus","alt","onClick","goBack","viewBox","links","rock","paper","scissors","lizard","spock","Chip","dispatch","useDispatch","button","ChipsDisplay","match","imgSelector","triangle","pentagon","chips","map","winAnimation","boxShadow","delay","ResultScreen","div","marginLeft","marginRight","ScreenSelector","path","slice","useRouteMatch","url","useEffect","setGameType","component","exact","STANDART","SelectorDisplay","TypeSelector","Game","App","Boolean","window","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f0fcf76f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/image-rules.5d74d25d.svg\";","module.exports = __webpack_public_path__ + \"static/media/image-rules-bonus.f19a40fb.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-rock.8ce1e109.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-paper.69a8c2e9.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-scissors.bec2f9b3.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-lizard.7d2e0b18.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-spock.b6446e8e.svg\";","module.exports = __webpack_public_path__ + \"static/media/bg-triangle.60a30ae9.svg\";","module.exports = __webpack_public_path__ + \"static/media/bg-pentagon.07cdd3ea.svg\";","export const CHIP_NAMES = {\n  ROCK: 'rock',\n  PAPER: 'paper',\n  SCISSORS: 'scissors',\n  LIZARD: 'lizard',\n  SPOCK: 'spock'\n}\n\nexport const STATUSES = {\n  WIN: 'you win',\n  LOSE: 'you lose',\n  DRAW: 'draw'\n}\n\nexport const GAME_TYPES = {\n  STANDART: 'standart',\n  LIZARD_SPOCK: 'lizard-spock'\n}\n","import { CHIP_NAMES, STATUSES, GAME_TYPES } from '../constants'\n\nconst { ROCK, PAPER, SCISSORS, LIZARD, SPOCK } = CHIP_NAMES\nconst { WIN, LOSE, DRAW } = STATUSES\nconst { LIZARD_SPOCK } = GAME_TYPES\n\nexport function playReducer (store, playerChoice, houseChoice) {\n  const { gameType } = store\n  let winCombinations = [\n    [ROCK, SCISSORS],\n    [PAPER, ROCK],\n    [SCISSORS, PAPER]\n  ]\n\n  if (gameType === LIZARD_SPOCK) {\n    winCombinations = [\n      ...winCombinations,\n      [ROCK, LIZARD],\n      [LIZARD, SPOCK],\n      [SPOCK, SCISSORS],\n      [SCISSORS, LIZARD],\n      [PAPER, SPOCK],\n      [LIZARD, PAPER],\n      [SPOCK, ROCK]\n    ]\n  }\n\n  const isWinner = winCombinations.some(([p, h]) => p === playerChoice && h === houseChoice)\n  const newStore = { ...store, playerChoice, houseChoice }\n\n  if (playerChoice === houseChoice) {\n    newStore.result = DRAW\n  } else if (isWinner) {\n    newStore.score = ++newStore.score\n    newStore.result = WIN\n  } else {\n    newStore.score = newStore.score === 0\n      ? 0 : newStore.score - 1\n    newStore.result = LOSE\n  }\n\n  return newStore\n}\n\nexport function getRandomHouseChoice (gameType) {\n  const houseChoices = [ROCK, PAPER, SCISSORS]\n\n  if (gameType === LIZARD_SPOCK) {\n    houseChoices.concat([\n      LIZARD, SPOCK\n    ])\n  }\n\n  return houseChoices[Math.floor(Math.random() * houseChoices.length)]\n}\n","import { PLAY, PLAY_AGAIN, SET_GAME_TYPE } from './actionTypes'\nimport { playReducer, getRandomHouseChoice } from './playReducer'\n\nconst initialState = {\n  score: 0,\n  gameType: null,\n  playerChoice: null,\n  houseChoice: null,\n  result: null\n}\n\nexport default (store, action) => {\n  switch (action.type) {\n    case PLAY:\n      return playReducer(\n        store,\n        action.payload.playerChoice,\n        getRandomHouseChoice(store.gameType)\n      )\n    case PLAY_AGAIN:\n      return {\n        ...initialState,\n        score: store.score,\n        gameType: store.gameType,\n        playerChoice: store.playerChoice,\n        houseChoice: store.houseChoice\n      }\n    case SET_GAME_TYPE:\n      return {\n        ...initialState,\n        gameType: action.payload.gameType\n      }\n    default:\n      return store || initialState\n  }\n}\n","import { createStore } from 'redux'\nimport reducers from './reducers'\n\nexport default createStore(reducers)\n\nexport { play, playAgain, setGameType } from './actionCreators'\n","export const PLAY = 'PLAY'\nexport const PLAY_AGAIN = 'PLAY_AGAIN'\nexport const SET_GAME_TYPE = 'SET_GAME_TYPE'\n","import React from 'react'\nimport { useSelector } from 'react-redux'\n\nimport './Score.css'\n\nconst ScoreDisplay = () => {\n  const score = useSelector(state => state.score)\n\n  return (\n    <div className='Score'>\n      <h2 className='Score__header'>\n        <span>ROCK</span>\n        <span>PAPER</span>\n        <span>SCISSORS</span>\n      </h2>\n      <div className='Score__display'>\n        <span className='Score__name'>Score</span>\n        <span className='Score__stat'>{score}</span>\n      </div>\n    </div>\n  )\n}\n\nexport default ScoreDisplay\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nimport './Btn.css'\n\nconst Btn = (props) => {\n  const { type, to, href, ...rest } = props\n  let classes = 'Btn'\n\n  if (type) classes += ` Btn--${type}`\n\n  if (to) {\n    return (\n      <Link className={classes} to={to} {...rest}>{props.children}</Link>\n    )\n  }\n\n  if (href) {\n    return (\n      <a className={classes} href={href} {...rest}>{props.children}</a>\n    )\n  }\n\n  return (\n    <button className={classes} {...rest}>{props.children}</button>\n  )\n}\n\nexport default Btn\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fill: \"#3B4262\",\n  fillRule: \"evenodd\",\n  d: \"M16.97 0l2.122 2.121-7.425 7.425 7.425 7.425-2.121 2.12-7.425-7.424-7.425 7.425L0 16.97l7.425-7.425L0 2.121 2.121 0l7.425 7.425L16.971 0z\",\n  opacity: 0.25\n});\n\nvar SvgIconClose = function SvgIconClose(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return React.createElement(\"svg\", _extends({\n    width: 20,\n    height: 20,\n    ref: svgRef\n  }, props), title ? React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgIconClose, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/icon-close.919ab92a.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react'\nimport { motion } from 'framer-motion'\n\nimport { GAME_TYPES } from '../../constants'\n\nimport rulesStandart from './image-rules.svg'\nimport rulesBonus from './image-rules-bonus.svg'\nimport { ReactComponent as CloseIcon } from './icon-close.svg'\nimport './Rules.css'\n\nconst Rules = ({ history, location }) => {\n  return (\n    <motion.section\n      className='Rules'\n      initial={{\n        opacity: 0\n      }}\n      animate={{\n        opacity: 1\n      }}\n      transition={{\n        duration: 0.2\n      }}\n    >\n      <h2 className='Rules__header'>Rules</h2>\n      <img\n        src={\n          location.pathname.includes(GAME_TYPES.STANDART)\n            ? rulesStandart : rulesBonus\n        }\n        alt='Rules description' width='304' height='270'\n      />\n      <button\n        onClick={() => history.goBack()}\n      >\n        <CloseIcon viewBox='0 0 20 20' />\n        <span className='visually-hidden'>\n          Close\n        </span>\n      </button>\n    </motion.section>\n  )\n}\n\nexport default Rules\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { useDispatch } from 'react-redux'\nimport { motion } from 'framer-motion'\n\nimport { play } from '../../store'\nimport { CHIP_NAMES } from '../../constants'\n\nimport rock from './icon-rock.svg'\nimport paper from './icon-paper.svg'\nimport scissors from './icon-scissors.svg'\nimport lizard from './icon-lizard.svg'\nimport spock from './icon-spock.svg'\nimport './Chip.css'\n\nconst links = {\n  rock,\n  paper,\n  scissors,\n  lizard,\n  spock\n}\n\nconst Chip = props => {\n  const { type, ...rest } = props\n  const dispatch = useDispatch()\n  const onClick = () => dispatch(play(type))\n\n  return (\n    <motion.button\n      initial={{ opacity: 0 }}\n      animate={{ opacity: 1 }}\n      className={`Chip Chip--${type}`} onClick={onClick}\n      {...rest}\n    >\n      <div className='Chip__image'>\n        <img src={links[type]} alt='Paper' width='49' height='59' />\n      </div>\n    </motion.button>\n  )\n}\n\nconst possibleNames = Object.keys(CHIP_NAMES).map(key => CHIP_NAMES[key])\n\nChip.propTypes = {\n  type: PropTypes.oneOf(possibleNames).isRequired\n}\n\nexport default Chip\n","import { PLAY, PLAY_AGAIN, SET_GAME_TYPE } from './actionTypes'\n\nexport const play = playerChoice => ({\n  type: PLAY,\n  payload: {\n    playerChoice\n  }\n})\n\nexport const playAgain = () => ({\n  type: PLAY_AGAIN\n})\n\nexport const setGameType = gameType => ({\n  type: SET_GAME_TYPE,\n  payload: {\n    gameType\n  }\n})\n","import React from 'react'\nimport { useSelector } from 'react-redux'\n\nimport Chip from '../Chip/Chip'\nimport { CHIP_NAMES, GAME_TYPES } from '../../constants'\n\nimport triangle from './bg-triangle.svg'\nimport pentagon from './bg-pentagon.svg'\nimport './ChipsDisplay.css'\n\nconst { ROCK, PAPER, SCISSORS, LIZARD, SPOCK } = CHIP_NAMES\n\nconst ChipsDisplay = ({ match }) => {\n  const gameType = useSelector(store => store.gameType)\n  const imgSelector = {\n    [GAME_TYPES.STANDART]: triangle,\n    [GAME_TYPES.LIZARD_SPOCK]: pentagon\n  }\n\n  let chips = [ROCK, PAPER, SCISSORS]\n\n  if (gameType === GAME_TYPES.LIZARD_SPOCK) {\n    chips = [...chips, LIZARD, SPOCK]\n  }\n\n  return (\n    <div\n      className={`ChipsDisplay ChipsDisplay--${gameType}`}\n    >\n      <img src={imgSelector[gameType]} alt='' />\n      {chips.map(type => (\n        <Chip type={type} key={type} />\n      ))}\n    </div>\n  )\n}\n\nexport default ChipsDisplay\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { motion } from 'framer-motion'\n\nimport Chip from '../Chip/Chip'\nimport Btn from '../Btn/Btn'\nimport { playAgain } from '../../store'\nimport { STATUSES } from '../../constants'\nimport './ResultScreen.css'\n\nconst winAnimation = {\n  animate: {\n    boxShadow: `\n    0px 0px 0px 1.25em hsla(0, 100%, 100%, 0.03),\n    0px 0px 0px 2.8125em hsla(0, 100%, 100%, 0.03),\n    0px 0px 0px 4.375em hsla(0, 100%, 100%, 0.03)\n    `\n  },\n  transition: {\n    delay: 1\n  }\n}\n\nconst ResultScreen = () => {\n  const result = useSelector(state => state.result)\n  const playerChoice = useSelector(state => state.playerChoice)\n  const houseChoice = useSelector(state => state.houseChoice)\n  const dispatch = useDispatch()\n  const onClick = () => dispatch(playAgain())\n\n  return (\n    <section\n      className='ResultScreen'\n    >\n      <div className='ResultScreen__chip'>\n        <motion.div\n          className='ResultScreen__backdrop'\n          {...(result === STATUSES.WIN ? winAnimation : {})}\n        >\n          <Chip\n            type={playerChoice}\n          />\n        </motion.div>\n        <span className='ResultScreen__label'>You picked</span>\n      </div>\n      <motion.div\n        className='ResultScreen__result'\n        initial={{\n          opacity: 0\n        }}\n        animate={{\n          marginLeft: ['0rem', '3.5rem', '3.5rem', '3.5rem'],\n          marginRight: ['0rem', '3.5rem', '3.5rem', '3.5rem'],\n          opacity: [0, 0, 0, 1]\n        }}\n        transition={{\n          delay: 1.5\n        }}\n      >\n        <h2>{result}</h2>\n        <Btn onClick={onClick}>Play again</Btn>\n      </motion.div>\n      <div className='ResultScreen__chip'>\n        <motion.div\n          className='ResultScreen__backdrop'\n          {...(result === STATUSES.LOSE ? winAnimation : {})}\n        >\n          <Chip\n            type={houseChoice}\n            transition={{\n              delay: 1\n            }}\n          />\n        </motion.div>\n        <span className='ResultScreen__label'>The house picked</span>\n      </div>\n    </section>\n  )\n}\n\nexport default ResultScreen\n","import React, { useEffect } from 'react'\nimport { useRouteMatch, Switch, Route } from 'react-router-dom'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { setGameType } from '../../store'\n\nimport Rules from '../Rules/Rules'\nimport ChipsDisplay from '../ChipsDisplay/ChipsDisplay'\nimport ResultScreen from '../ResultScreen/ResultScreen'\nimport Btn from '../Btn/Btn'\nimport './ScreenSelector.css'\n\nconst ScreenSelector = ({ match }) => {\n  const result = useSelector(store => store.result)\n  const gameType = match.path.slice(1)\n  const dispatch = useDispatch()\n  const { path, url } = useRouteMatch()\n\n  useEffect(() => {\n    dispatch(setGameType(gameType))\n  }, [gameType, dispatch])\n\n  return (\n    <div className='ScreenSelector'>\n      {\n        result\n          ? <ResultScreen key='ResultScreen' />\n          : <ChipsDisplay key='ChipsDisplay' />\n      }\n      <div className='ScreenSelector__container'>\n        <Btn to={`${url}/rules`} type='border'>Rules</Btn>\n      </div>\n\n      <Switch>\n        <Route\n          path={`${path}/rules`}\n          component={Rules}\n          exact\n        />\n      </Switch>\n    </div>\n  )\n}\n\nexport default ScreenSelector\n","import React from 'react'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from 'react-router-dom'\n\nimport Btn from '../Btn/Btn'\nimport ScreenSelector from '../ScreenSelector/ScreenSelector'\n\nimport { GAME_TYPES } from '../../constants'\nimport './TypeSelector.css'\n\nconst { STANDART, LIZARD_SPOCK } = GAME_TYPES\n\nconst SelectorDisplay = () => {\n  return (\n    <section className='TypeSelector'>\n      <h2>Select game type</h2>\n      <ul>\n        <li>\n          <Btn to='/react-rps-game/standart'>\n              Standart\n          </Btn>\n        </li>\n        <li>\n          <Btn to='/react-rps-game/lizard-spock'>\n              Lizard spock\n          </Btn>\n        </li>\n      </ul>\n    </section>\n  )\n}\n\nconst TypeSelector = () => {\n  return (\n    <Router>\n      <Switch>\n        <Route\n          path={[\n            `/react-rps-game/${STANDART}`,\n            `/react-rps-game/${LIZARD_SPOCK}`\n          ]}\n          component={ScreenSelector}\n        />\n        <Route\n          path='/react-rps-game'\n          component={SelectorDisplay}\n        />\n      </Switch>\n    </Router>\n  )\n}\n\nexport default TypeSelector\n","import React from 'react'\n\nimport ScoreDisplay from '../Score/Score'\nimport TypeSelector from '../TypeSelector/TypeSelector'\nimport './Game.css'\n\nconst Game = (props) => {\n  return (\n    <section className='Game'>\n      <ScoreDisplay />\n      <TypeSelector />\n    </section>\n  )\n}\n\nexport default Game\n","import React from 'react'\nimport Game from './components/Game/Game'\n\nconst App = () => (\n\n  <Game />\n\n)\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport App from './App'\nimport './index.css'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}